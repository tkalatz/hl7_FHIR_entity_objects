//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.12.11 at 03:47:56 PM EET 
//


package org.hl7.fhir;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for repositoryType-list.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="repositoryType-list">
 *   &lt;restriction base="{http://hl7.org/fhir}code-primitive">
 *     &lt;enumeration value="directlink"/>
 *     &lt;enumeration value="openapi"/>
 *     &lt;enumeration value="login"/>
 *     &lt;enumeration value="oauth"/>
 *     &lt;enumeration value="other"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "repositoryType-list")
@XmlEnum
public enum RepositoryTypeList {


    /**
     * Click and see
     * 
     */
    @XmlEnumValue("directlink")
    DIRECTLINK("directlink"),

    /**
     * The URL is the RESTful or other kind of API that can access to the result.
     * 
     */
    @XmlEnumValue("openapi")
    OPENAPI("openapi"),

    /**
     * Result cannot be access unless an account is logged in
     * 
     */
    @XmlEnumValue("login")
    LOGIN("login"),

    /**
     * Result need to be fetched with API and need LOGIN( or cookies are required when visiting the link of resource)
     * 
     */
    @XmlEnumValue("oauth")
    OAUTH("oauth"),

    /**
     * Some other complicated or particular way to get resource from URL.
     * 
     */
    @XmlEnumValue("other")
    OTHER("other");
    private final java.lang.String value;

    RepositoryTypeList(java.lang.String v) {
        value = v;
    }

    public java.lang.String value() {
        return value;
    }

    public static RepositoryTypeList fromValue(java.lang.String v) {
        for (RepositoryTypeList c: RepositoryTypeList.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
