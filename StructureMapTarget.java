//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.12.11 at 03:47:56 PM EET 
//


package org.hl7.fhir;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;


/**
 * A Map of relationships between 2 structures that can be used to transform data.
 * 
 * <p>Java class for StructureMap.Target complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="StructureMap.Target">
 *   &lt;complexContent>
 *     &lt;extension base="{http://hl7.org/fhir}BackboneElement">
 *       &lt;sequence>
 *         &lt;element name="context" type="{http://hl7.org/fhir}id" minOccurs="0"/>
 *         &lt;element name="element" type="{http://hl7.org/fhir}string" minOccurs="0"/>
 *         &lt;element name="variable" type="{http://hl7.org/fhir}id" minOccurs="0"/>
 *         &lt;element name="listMode" type="{http://hl7.org/fhir}StructureMapTargetListMode" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="listRuleId" type="{http://hl7.org/fhir}id" minOccurs="0"/>
 *         &lt;element name="transform" type="{http://hl7.org/fhir}StructureMapTransform" minOccurs="0"/>
 *         &lt;element name="parameter" type="{http://hl7.org/fhir}StructureMap.Parameter" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "StructureMap.Target", propOrder = {
    "context",
    "element",
    "variable",
    "listMode",
    "listRuleId",
    "transform",
    "parameter"
})
public class StructureMapTarget
    extends BackboneElement
{

    protected Id context;
    protected String element;
    protected Id variable;
    protected List<StructureMapTargetListMode> listMode;
    protected Id listRuleId;
    protected StructureMapTransform transform;
    protected List<StructureMapParameter> parameter;

    /**
     * Gets the value of the context property.
     * 
     * @return
     *     possible object is
     *     {@link Id }
     *     
     */
    public Id getContext() {
        return context;
    }

    /**
     * Sets the value of the context property.
     * 
     * @param value
     *     allowed object is
     *     {@link Id }
     *     
     */
    public void setContext(Id value) {
        this.context = value;
    }

    /**
     * Gets the value of the element property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getElement() {
        return element;
    }

    /**
     * Sets the value of the element property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setElement(String value) {
        this.element = value;
    }

    /**
     * Gets the value of the variable property.
     * 
     * @return
     *     possible object is
     *     {@link Id }
     *     
     */
    public Id getVariable() {
        return variable;
    }

    /**
     * Sets the value of the variable property.
     * 
     * @param value
     *     allowed object is
     *     {@link Id }
     *     
     */
    public void setVariable(Id value) {
        this.variable = value;
    }

    /**
     * Gets the value of the listMode property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the listMode property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getListMode().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link StructureMapTargetListMode }
     * 
     * 
     */
    public List<StructureMapTargetListMode> getListMode() {
        if (listMode == null) {
            listMode = new ArrayList<StructureMapTargetListMode>();
        }
        return this.listMode;
    }

    /**
     * Gets the value of the listRuleId property.
     * 
     * @return
     *     possible object is
     *     {@link Id }
     *     
     */
    public Id getListRuleId() {
        return listRuleId;
    }

    /**
     * Sets the value of the listRuleId property.
     * 
     * @param value
     *     allowed object is
     *     {@link Id }
     *     
     */
    public void setListRuleId(Id value) {
        this.listRuleId = value;
    }

    /**
     * Gets the value of the transform property.
     * 
     * @return
     *     possible object is
     *     {@link StructureMapTransform }
     *     
     */
    public StructureMapTransform getTransform() {
        return transform;
    }

    /**
     * Sets the value of the transform property.
     * 
     * @param value
     *     allowed object is
     *     {@link StructureMapTransform }
     *     
     */
    public void setTransform(StructureMapTransform value) {
        this.transform = value;
    }

    /**
     * Gets the value of the parameter property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the parameter property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getParameter().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link StructureMapParameter }
     * 
     * 
     */
    public List<StructureMapParameter> getParameter() {
        if (parameter == null) {
            parameter = new ArrayList<StructureMapParameter>();
        }
        return this.parameter;
    }

}
