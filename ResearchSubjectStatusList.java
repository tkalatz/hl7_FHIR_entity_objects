//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.12.11 at 03:47:56 PM EET 
//


package org.hl7.fhir;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ResearchSubjectStatus-list.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ResearchSubjectStatus-list">
 *   &lt;restriction base="{http://hl7.org/fhir}code-primitive">
 *     &lt;enumeration value="candidate"/>
 *     &lt;enumeration value="eligible"/>
 *     &lt;enumeration value="follow-up"/>
 *     &lt;enumeration value="ineligible"/>
 *     &lt;enumeration value="not-registered"/>
 *     &lt;enumeration value="off-study"/>
 *     &lt;enumeration value="on-study"/>
 *     &lt;enumeration value="on-study-intervention"/>
 *     &lt;enumeration value="on-study-observation"/>
 *     &lt;enumeration value="pending-on-study"/>
 *     &lt;enumeration value="potential-candidate"/>
 *     &lt;enumeration value="screening"/>
 *     &lt;enumeration value="withdrawn"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ResearchSubjectStatus-list")
@XmlEnum
public enum ResearchSubjectStatusList {


    /**
     * Candidate
     * 
     */
    @XmlEnumValue("candidate")
    CANDIDATE("candidate"),

    /**
     * Eligible
     * 
     */
    @XmlEnumValue("eligible")
    ELIGIBLE("eligible"),

    /**
     * Follow-up
     * 
     */
    @XmlEnumValue("follow-up")
    FOLLOW_UP("follow-up"),

    /**
     * Ineligible
     * 
     */
    @XmlEnumValue("ineligible")
    INELIGIBLE("ineligible"),

    /**
     * Not Registered
     * 
     */
    @XmlEnumValue("not-registered")
    NOT_REGISTERED("not-registered"),

    /**
     * Off-study
     * 
     */
    @XmlEnumValue("off-study")
    OFF_STUDY("off-study"),

    /**
     * On-study
     * 
     */
    @XmlEnumValue("on-study")
    ON_STUDY("on-study"),

    /**
     * On-study-intervention
     * 
     */
    @XmlEnumValue("on-study-intervention")
    ON_STUDY_INTERVENTION("on-study-intervention"),

    /**
     * On-study-observation
     * 
     */
    @XmlEnumValue("on-study-observation")
    ON_STUDY_OBSERVATION("on-study-observation"),

    /**
     * Pending on-study
     * 
     */
    @XmlEnumValue("pending-on-study")
    PENDING_ON_STUDY("pending-on-study"),

    /**
     * Potential Candidate
     * 
     */
    @XmlEnumValue("potential-candidate")
    POTENTIAL_CANDIDATE("potential-candidate"),

    /**
     * Screening
     * 
     */
    @XmlEnumValue("screening")
    SCREENING("screening"),

    /**
     * Withdrawn
     * 
     */
    @XmlEnumValue("withdrawn")
    WITHDRAWN("withdrawn");
    private final java.lang.String value;

    ResearchSubjectStatusList(java.lang.String v) {
        value = v;
    }

    public java.lang.String value() {
        return value;
    }

    public static ResearchSubjectStatusList fromValue(java.lang.String v) {
        for (ResearchSubjectStatusList c: ResearchSubjectStatusList.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
