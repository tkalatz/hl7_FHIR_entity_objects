//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.12.11 at 03:47:56 PM EET 
//


package org.hl7.fhir;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for CatalogEntryType-list.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="CatalogEntryType-list">
 *   &lt;restriction base="{http://hl7.org/fhir}code-primitive">
 *     &lt;enumeration value="ActivityDefinition"/>
 *     &lt;enumeration value="PlanDefinition"/>
 *     &lt;enumeration value="SpecimenDefinition"/>
 *     &lt;enumeration value="ObservationDefinition"/>
 *     &lt;enumeration value="DeviceDefinition"/>
 *     &lt;enumeration value="Organization"/>
 *     &lt;enumeration value="Practitioner"/>
 *     &lt;enumeration value="PractitionerRole"/>
 *     &lt;enumeration value="HealthcareService"/>
 *     &lt;enumeration value="MedicationKnowledge"/>
 *     &lt;enumeration value="Medication"/>
 *     &lt;enumeration value="Substance"/>
 *     &lt;enumeration value="Location"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "CatalogEntryType-list")
@XmlEnum
public enum CatalogEntryTypeList {


    /**
     * ActivityDefinition
     * 
     */
    @XmlEnumValue("ActivityDefinition")
    ACTIVITY_DEFINITION("ActivityDefinition"),

    /**
     * PlanDefinition
     * 
     */
    @XmlEnumValue("PlanDefinition")
    PLAN_DEFINITION("PlanDefinition"),

    /**
     * SpecimenDefinition
     * 
     */
    @XmlEnumValue("SpecimenDefinition")
    SPECIMEN_DEFINITION("SpecimenDefinition"),

    /**
     * ObservationDefinition
     * 
     */
    @XmlEnumValue("ObservationDefinition")
    OBSERVATION_DEFINITION("ObservationDefinition"),

    /**
     * DeviceDefinition
     * 
     */
    @XmlEnumValue("DeviceDefinition")
    DEVICE_DEFINITION("DeviceDefinition"),

    /**
     * Organization
     * 
     */
    @XmlEnumValue("Organization")
    ORGANIZATION("Organization"),

    /**
     * Practitioner
     * 
     */
    @XmlEnumValue("Practitioner")
    PRACTITIONER("Practitioner"),

    /**
     * PractitionerRole
     * 
     */
    @XmlEnumValue("PractitionerRole")
    PRACTITIONER_ROLE("PractitionerRole"),

    /**
     * HealthcareService
     * 
     */
    @XmlEnumValue("HealthcareService")
    HEALTHCARE_SERVICE("HealthcareService"),

    /**
     * MedicationKnowledge
     * 
     */
    @XmlEnumValue("MedicationKnowledge")
    MEDICATION_KNOWLEDGE("MedicationKnowledge"),

    /**
     * Medication
     * 
     */
    @XmlEnumValue("Medication")
    MEDICATION("Medication"),

    /**
     * Substance
     * 
     */
    @XmlEnumValue("Substance")
    SUBSTANCE("Substance"),

    /**
     * Location
     * 
     */
    @XmlEnumValue("Location")
    LOCATION("Location");
    private final java.lang.String value;

    CatalogEntryTypeList(java.lang.String v) {
        value = v;
    }

    public java.lang.String value() {
        return value;
    }

    public static CatalogEntryTypeList fromValue(java.lang.String v) {
        for (CatalogEntryTypeList c: CatalogEntryTypeList.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
