//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.12.11 at 03:47:56 PM EET 
//


package org.hl7.fhir;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * A kind of specimen with associated set of requirements.
 * 
 * <p>Java class for SpecimenDefinition.TypeTested complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SpecimenDefinition.TypeTested">
 *   &lt;complexContent>
 *     &lt;extension base="{http://hl7.org/fhir}BackboneElement">
 *       &lt;sequence>
 *         &lt;element name="isDerived" type="{http://hl7.org/fhir}boolean" minOccurs="0"/>
 *         &lt;element name="type" type="{http://hl7.org/fhir}CodeableConcept" minOccurs="0"/>
 *         &lt;element name="preference" type="{http://hl7.org/fhir}SpecimenContainedPreference"/>
 *         &lt;element name="container" type="{http://hl7.org/fhir}SpecimenDefinition.Container" minOccurs="0"/>
 *         &lt;element name="requirement" type="{http://hl7.org/fhir}string" minOccurs="0"/>
 *         &lt;element name="retentionTime" type="{http://hl7.org/fhir}Duration" minOccurs="0"/>
 *         &lt;element name="singleUse" type="{http://hl7.org/fhir}boolean" minOccurs="0"/>
 *         &lt;element name="rejectionCriterion" type="{http://hl7.org/fhir}CodeableConcept" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="handling" type="{http://hl7.org/fhir}SpecimenDefinition.Handling" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="testingDestination" type="{http://hl7.org/fhir}CodeableConcept" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SpecimenDefinition.TypeTested", propOrder = {
    "isDerived",
    "type",
    "preference",
    "container",
    "requirement",
    "retentionTime",
    "singleUse",
    "rejectionCriterion",
    "handling",
    "testingDestination"
})
public class SpecimenDefinitionTypeTested
    extends BackboneElement
{

    protected Boolean isDerived;
    protected CodeableConcept type;
    @XmlElement(required = true)
    protected SpecimenContainedPreference preference;
    protected SpecimenDefinitionContainer container;
    protected String requirement;
    protected Duration retentionTime;
    protected Boolean singleUse;
    protected List<CodeableConcept> rejectionCriterion;
    protected List<SpecimenDefinitionHandling> handling;
    protected List<CodeableConcept> testingDestination;

    /**
     * Gets the value of the isDerived property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean getIsDerived() {
        return isDerived;
    }

    /**
     * Sets the value of the isDerived property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsDerived(Boolean value) {
        this.isDerived = value;
    }

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link CodeableConcept }
     *     
     */
    public CodeableConcept getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeableConcept }
     *     
     */
    public void setType(CodeableConcept value) {
        this.type = value;
    }

    /**
     * Gets the value of the preference property.
     * 
     * @return
     *     possible object is
     *     {@link SpecimenContainedPreference }
     *     
     */
    public SpecimenContainedPreference getPreference() {
        return preference;
    }

    /**
     * Sets the value of the preference property.
     * 
     * @param value
     *     allowed object is
     *     {@link SpecimenContainedPreference }
     *     
     */
    public void setPreference(SpecimenContainedPreference value) {
        this.preference = value;
    }

    /**
     * Gets the value of the container property.
     * 
     * @return
     *     possible object is
     *     {@link SpecimenDefinitionContainer }
     *     
     */
    public SpecimenDefinitionContainer getContainer() {
        return container;
    }

    /**
     * Sets the value of the container property.
     * 
     * @param value
     *     allowed object is
     *     {@link SpecimenDefinitionContainer }
     *     
     */
    public void setContainer(SpecimenDefinitionContainer value) {
        this.container = value;
    }

    /**
     * Gets the value of the requirement property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRequirement() {
        return requirement;
    }

    /**
     * Sets the value of the requirement property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRequirement(String value) {
        this.requirement = value;
    }

    /**
     * Gets the value of the retentionTime property.
     * 
     * @return
     *     possible object is
     *     {@link Duration }
     *     
     */
    public Duration getRetentionTime() {
        return retentionTime;
    }

    /**
     * Sets the value of the retentionTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link Duration }
     *     
     */
    public void setRetentionTime(Duration value) {
        this.retentionTime = value;
    }

    /**
     * Gets the value of the singleUse property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean getSingleUse() {
        return singleUse;
    }

    /**
     * Sets the value of the singleUse property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setSingleUse(Boolean value) {
        this.singleUse = value;
    }

    /**
     * Gets the value of the rejectionCriterion property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the rejectionCriterion property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRejectionCriterion().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CodeableConcept }
     * 
     * 
     */
    public List<CodeableConcept> getRejectionCriterion() {
        if (rejectionCriterion == null) {
            rejectionCriterion = new ArrayList<CodeableConcept>();
        }
        return this.rejectionCriterion;
    }

    /**
     * Gets the value of the handling property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the handling property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getHandling().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SpecimenDefinitionHandling }
     * 
     * 
     */
    public List<SpecimenDefinitionHandling> getHandling() {
        if (handling == null) {
            handling = new ArrayList<SpecimenDefinitionHandling>();
        }
        return this.handling;
    }

    /**
     * Gets the value of the testingDestination property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the testingDestination property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTestingDestination().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CodeableConcept }
     * 
     * 
     */
    public List<CodeableConcept> getTestingDestination() {
        if (testingDestination == null) {
            testingDestination = new ArrayList<CodeableConcept>();
        }
        return this.testingDestination;
    }

}
