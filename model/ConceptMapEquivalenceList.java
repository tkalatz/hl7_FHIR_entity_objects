//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.12.11 at 03:47:56 PM EET 
//


package org.hl7.fhir;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ConceptMapEquivalence-list.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ConceptMapEquivalence-list">
 *   &lt;restriction base="{http://hl7.org/fhir}code-primitive">
 *     &lt;enumeration value="relatedto"/>
 *     &lt;enumeration value="equivalent"/>
 *     &lt;enumeration value="equal"/>
 *     &lt;enumeration value="wider"/>
 *     &lt;enumeration value="subsumes"/>
 *     &lt;enumeration value="narrower"/>
 *     &lt;enumeration value="specializes"/>
 *     &lt;enumeration value="inexact"/>
 *     &lt;enumeration value="unmatched"/>
 *     &lt;enumeration value="disjoint"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ConceptMapEquivalence-list")
@XmlEnum
public enum ConceptMapEquivalenceList {


    /**
     * Related To
     * 
     */
    @XmlEnumValue("relatedto")
    RELATEDTO("relatedto"),

    /**
     * Equivalent
     * 
     */
    @XmlEnumValue("equivalent")
    EQUIVALENT("equivalent"),

    /**
     * Equal
     * 
     */
    @XmlEnumValue("equal")
    EQUAL("equal"),

    /**
     * Wider
     * 
     */
    @XmlEnumValue("wider")
    WIDER("wider"),

    /**
     * Subsumes
     * 
     */
    @XmlEnumValue("subsumes")
    SUBSUMES("subsumes"),

    /**
     * Narrower
     * 
     */
    @XmlEnumValue("narrower")
    NARROWER("narrower"),

    /**
     * Specializes
     * 
     */
    @XmlEnumValue("specializes")
    SPECIALIZES("specializes"),

    /**
     * Inexact
     * 
     */
    @XmlEnumValue("inexact")
    INEXACT("inexact"),

    /**
     * Unmatched
     * 
     */
    @XmlEnumValue("unmatched")
    UNMATCHED("unmatched"),

    /**
     * Disjoint
     * 
     */
    @XmlEnumValue("disjoint")
    DISJOINT("disjoint");
    private final java.lang.String value;

    ConceptMapEquivalenceList(java.lang.String v) {
        value = v;
    }

    public java.lang.String value() {
        return value;
    }

    public static ConceptMapEquivalenceList fromValue(java.lang.String v) {
        for (ConceptMapEquivalenceList c: ConceptMapEquivalenceList.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
