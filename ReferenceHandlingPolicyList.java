//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.12.11 at 03:47:56 PM EET 
//


package org.hl7.fhir;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ReferenceHandlingPolicy-list.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ReferenceHandlingPolicy-list">
 *   &lt;restriction base="{http://hl7.org/fhir}code-primitive">
 *     &lt;enumeration value="literal"/>
 *     &lt;enumeration value="logical"/>
 *     &lt;enumeration value="resolves"/>
 *     &lt;enumeration value="enforced"/>
 *     &lt;enumeration value="local"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ReferenceHandlingPolicy-list")
@XmlEnum
public enum ReferenceHandlingPolicyList {


    /**
     * Literal References
     * 
     */
    @XmlEnumValue("literal")
    LITERAL("literal"),

    /**
     * Logical References
     * 
     */
    @XmlEnumValue("logical")
    LOGICAL("logical"),

    /**
     * Resolves References
     * 
     */
    @XmlEnumValue("resolves")
    RESOLVES("resolves"),

    /**
     * Reference Integrity Enforced
     * 
     */
    @XmlEnumValue("enforced")
    ENFORCED("enforced"),

    /**
     * Local References Only
     * 
     */
    @XmlEnumValue("local")
    LOCAL("local");
    private final java.lang.String value;

    ReferenceHandlingPolicyList(java.lang.String v) {
        value = v;
    }

    public java.lang.String value() {
        return value;
    }

    public static ReferenceHandlingPolicyList fromValue(java.lang.String v) {
        for (ReferenceHandlingPolicyList c: ReferenceHandlingPolicyList.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
